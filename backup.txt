https://chatgpt.com/share/36893830-3b2c-4035-9d92-ad62cef1117c

//user authentication
https://chatgpt.com/share/ef4fefd0-98e4-403c-8cd8-85ccd58cd43a


const express = require("express");
const bodyParser = require("body-parser");
const path = require("path");
const cors = require("cors"); // Import cors
const db = require("./server"); // Import the database connection

const app = express();

// Use cors middleware
app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Routes
app.get("/", (req, res) => {
  res.send("Welcome to the CRUD API");
});

// Create User
app.post("/user/data", (req, res) => {
  const { name, gender, age } = req.body;
  const query = "INSERT INTO person (name, gender, age) VALUES (?, ?, ?)";
  db.query(query, [name, gender, age], (err, results) => {
    if (err) {
      return res.status(500).send(err);
    }
    res.status(201).send({ id: results.insertId, name, gender, age });
  });
});

// Get All Users
app.get("/user/datas", (req, res) => {
  const query = "SELECT * FROM person";
  db.query(query, (err, results) => {
    if (err) {
      return res.status(500).send(err);
    }
    res.status(200).json(results);
  });
});

// Get Single User
app.get("/user/data/:id", (req, res) => {
  const { id } = req.params;
  const query = "SELECT * FROM person WHERE id = ?";
  db.query(query, [id], (err, results) => {
    if (err) {
      return res.status(500).send(err);
    }
    if (results.length === 0) {
      return res.status(404).send("User not found");
    }
    res.status(200).json(results[0]);
  });
});

// Update User
app.put("/user/data/:id", (req, res) => {
  const { id } = req.params;
  const { name, gender, age } = req.body;
  const query = "UPDATE person SET name = ?, gender = ?, age = ? WHERE id = ?";
  db.query(query, [name, gender, age, id], (err, results) => {
    if (err) {
      return res.status(500).send(err);
    }
    if (results.affectedRows === 0) {
      return res.status(404).send("User not found");
    }
    res.status(200).send({ id, name, gender, age });
  });
});

// Delete User
app.delete("/user/data:id", (req, res) => {
  const { id } = req.params;
  const query = "DELETE FROM person WHERE id = ?";
  db.query(query, [id], (err, results) => {
    if (err) {
      return res.status(500).send(err);
    }
    if (results.affectedRows === 0) {
      return res.status(404).send("User not found");
    }
    res.status(200).send("User deleted");
  });
});

// app.use(express.static(path.join(__dirname, "public")));

// Start server
const port = process.env.PORT || 5000;
app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});
